#include "lists.h"
/**
 * insert_dnodeint_at_index - funct that insert a new node at a ggiven position
 * @h: container of node
 * @idx: index where node is to be added
 * @n: value to be added
 * Return: address of new node or NULL if it failed
 */
dlistint_t *insert_nodeint_at_index(dlistint_t **h, unsigned int idx, int n)
{
dlistint_t *temp, *new;
unsigned int i;
if (h == NULL)
return (NULL);

if (idx == 0)
{
temp = add_dnodeint(h, n); /* call function to add node at the beginning */
return (temp);
}
temp = *h; /* assign address of new value to temp */
i = 1;
while (i < idx)
{
temp = temp->next; /* tranverse through linked list until condition is false */
temp->next->prev = temp;
if (temp == NULL)
return (NULL);

i++;
}
new = malloc(sizeof(listint_t)); /* allocate memory to new */
if (new == NULL)
return (NULL);

new->n = n; /* assign the value pass to function to new */
new->next = temp->next; /* new next will now store past temp stored address */
temp->next = new; /* temp next will now keep the address of new */
return (new);
}
